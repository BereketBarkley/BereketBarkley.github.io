<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>
        <%=name%>
    </title>
    <meta name="author" content="You">
    <meta name="description" content="A compendium of Harry Potter characters">
    <meta content="text/html" http-equiv="Content-type" />
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <link rel="stylesheet" href="styles.css">
    <script src="https://d3js.org/d3.v6.js"></script>
</head>

<body>
    <%- include ('global/nav'); %>

        <header>
            <h1>
                <%=name%>
            </h1>
        </header>
        <section id="charcter-stats">
            <h2>Stats</h2>
            <div id="my_dataviz"></div>
            <ul>
                <li>Native American: <%=stats["Native American"]%>
                </li>
                <li>Asian: <%=stats.Asian%>
                </li>
                <li>Black: <%=stats.Black%>
                </li>
                <li>LatinX: <%=stats.LatinX%>
                </li>
                <li>White: <%=stats.White%>
                </li>
                <li>Multi-Racial: <%=stats["Multi-Racial"]%>
                </li>
                <li>Unknown: <%=stats.Unknown%>
                </li>
            </ul>
        </section>
        <%- include ('global/footer'); %>

            <span id='variableJSON' hidden>
                <%= JSON.stringify(stats); %>
            </span>
            <script>
                var data = JSON.parse($('#variableJSON').text());
                $('#variableJSON').remove();

                // console.log("data", data);

                let models = [];
                // 7 races represented in dataset
                for (let i = 0; i < 7; i++) {
                    let race = Object.keys(data)[i];
                    let s = String(data[race]).split(" ");
                    let testers = s[0];
                    let offers = s[2];
                    let obj = {
                        "race": race,
                        "testers": testers,
                        "offers": offers,
                    }
                    models[i] = obj;
                }

                models = models.map(i => {
                    i.race = i.race;
                    return i;
                });

                var container = d3.select("#my_dataviz"),
                    width = 500,
                    height = 300,
                    margin = { top: 30, right: 20, bottom: 30, left: 50 },
                    barPadding = .2,
                    axisTicks = { qty: 5, outerSize: 0, dateFormat: '%m-%d' };

                var svg = container
                    .append("svg")
                    .attr("width", width)
                    .attr("height", height)
                    .append("g")
                    .attr("transform", `translate(${margin.left},${margin.top})`);

                var xScale0 = d3.scaleBand().range([0, width - margin.left - margin.right]).padding(barPadding);
                var xScale1 = d3.scaleBand();
                var yScale = d3.scaleLinear().range([height - margin.top - margin.bottom, 0]);

                var xAxis = d3.axisBottom(xScale0).tickSizeOuter(axisTicks.outerSize);
                var yAxis = d3.axisLeft(yScale).ticks(axisTicks.qty).tickSizeOuter(axisTicks.outerSize);

                xScale0.domain(models.map(d => d.race));
                xScale1.domain(['testers', 'offers']).range([0, xScale0.bandwidth()]);
                yScale.domain([0, d3.max(models, d => d.testers > d.offers ? d.testers : d.offers)]);

                var race = svg.selectAll(".race")
                    .data(models)
                    .enter().append("g")
                    .attr("class", "race")
                    .attr("transform", d => `translate(${xScale0(d.race)},0)`);

                /* Add testers bars */
                race.selectAll(".bar.testers")
                    .data(d => [d])
                    .enter()
                    .append("rect")
                    .attr("class", "bar testers")
                    .style("fill", "blue")
                    .attr("x", d => xScale1('testers'))
                    .attr("y", d => yScale(d.testers))
                    .attr("width", xScale1.bandwidth())
                    .attr("height", d => {
                        return height - margin.top - margin.bottom - yScale(d.testers)
                    });

                /* Add offers bars */
                race.selectAll(".bar.offers")
                    .data(d => [d])
                    .enter()
                    .append("rect")
                    .attr("class", "bar offers")
                    .style("fill", "green")
                    .attr("x", d => xScale1('offers'))
                    .attr("y", d => yScale(d.offers))
                    .attr("width", xScale1.bandwidth())
                    .attr("height", d => {
                        return height - margin.top - margin.bottom - yScale(d.offers)
                    });

                // Add the X Axis
                svg.append("g")
                    .attr("class", "x axis")
                    .attr("transform", `translate(0,${height - margin.top - margin.bottom})`)
                    .call(xAxis);

                // Add the Y Axis
                svg.append("g")
                    .attr("class", "y axis")
                    .call(yAxis);

                svg.append("text")
                    .attr("class", "y label")
                    .attr("text-anchor", "end")
                    .attr("y", -50)
                    .attr("x", -75)
                    .attr("dy", "0.75em")
                    .attr("transform", "rotate(-90)")
                    .style("font", "14px")
                    .text("Number of Students");
          </script>
</body>

</html>
